<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ksdev</title>
  
  <subtitle>Kangsan&#39;s Dev log</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kangsanChang.github.io/"/>
  <updated>2017-11-20T04:34:53.000Z</updated>
  <id>http://kangsanChang.github.io/</id>
  
  <author>
    <name>kangsan Chang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue에 reCAPTCHA 적용하기</title>
    <link href="http://kangsanChang.github.io/2017/11/20/recaptcha-with-vue/"/>
    <id>http://kangsanChang.github.io/2017/11/20/recaptcha-with-vue/</id>
    <published>2017-11-20T02:34:21.000Z</published>
    <updated>2017-11-20T04:34:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="소개"><a href="#소개" class="headerlink" title="소개"></a>소개</h2><p>reCAPTCHA 를 적용하는 튜토리얼은 충분히 많으나, Vue 와 함꼐 쓴 예제는 없어서 써보게 되었다.<br>사실, Vue 라고 다를 건 없는 것 같다.</p><h2 id="reCAPTCHA-란"><a href="#reCAPTCHA-란" class="headerlink" title="reCAPTCHA 란?"></a>reCAPTCHA 란?</h2><p><a href="https://developers.google.com/recaptcha/" target="_blank" rel="external">소개 페이지</a></p><p>동영상도 재밌다.</p><p>로봇을 이용한 스팸 글 등록, 자동 회원가입등 나쁜 목적으로 대량으로 데이터를 생성하는 것을 방지하기 위한 방법.<br>이전의 reCAPTCHA 내지 CAPTCHA는 문자를 이상하게 꼬아놓고 휘게 하여 사람이 판독하는 수준이었는데<br>V2로 바뀌며 reCAPTCHA 위젯에 체크하는 방식으로 바뀌었다. 심플한 UI 덕분에 사용자 입장에서의 거부감이 많이 줄어들었다.<br>(V1 은 2016년 5월부로 deprecated 되었다.)</p><p>reCAPTCHA V2는 마우스 포인터의 속도나 머신 러닝을 이용한 다양한 알고리즘으로 사람임을 판별한다.<br>모바일의 경우 마우스 포인터가 없이 터치로 이루어지므로, 사람임을 판별하기 위한 추가적인 절차가 들어가는데, 단어와 일치하는 사진을 고르면 된다.<br>최근에는 Invisible reCAPTCHA 라고 하여 따로 위젯을 클릭 할 필요 없이 사용자의 패턴만으로 파악하고, 로봇으로 의심되는 경우에만 검사하는 방식도 사용할 수 있다.</p><h2 id="Vue에-reCAPTCHA-적용하기"><a href="#Vue에-reCAPTCHA-적용하기" class="headerlink" title="Vue에 reCAPTCHA 적용하기"></a>Vue에 reCAPTCHA 적용하기</h2><p><code>vue-cli</code> 를 이용 해 구성한 프로젝트 기준</p><h4 id="1-reCAPTCHA-API-key-pair-발급받기"><a href="#1-reCAPTCHA-API-key-pair-발급받기" class="headerlink" title="1. reCAPTCHA API key pair 발급받기"></a>1. reCAPTCHA API key pair 발급받기</h4><p><a href="https://www.google.com/recaptcha/admin#list" target="_blank" rel="external">https://www.google.com/recaptcha/admin#list</a> 에서 리캡차에서 사용할 API KEY를 받을 수 있다.</p><p>recaptcha를 사용할 domain 도 꼭 필요하다. 테스트 용의 경우 localhost 를 사용하면 된다.</p><img src="/2017/11/20/recaptcha-with-vue/create-recaptcha-key.png" alt="createRecaptchaKey" title="createRecaptchaKey"><p>아래와 같은 Key pair을 얻을 수 있다.</p><img src="/2017/11/20/recaptcha-with-vue/key-pair.png" alt="keyPair" title="keyPair"><p>Site Key 는 Vue Component 에 생성 할 reCATPCHA widget 에서 사용 할 key 이다. 생성한 위젯에서는 사용자의 행동을 보고 사람이라 판별하면 google reCAPTCHA 서버에서 token을 보내준다.</p><p>Secret Key 는 클라이언트에서 보낸 reCAPTCHA token 을 검증할 수 있는 Key 이다.<br>google reCATCHA에 token 과 secret key 를 같이 보내면 유요한 token 인지 알려준다.</p><h4 id="2-reCHAPTCHA-가-들어갈-HTML-head에-google-api-script-넣어주기"><a href="#2-reCHAPTCHA-가-들어갈-HTML-head에-google-api-script-넣어주기" class="headerlink" title="2. reCHAPTCHA 가 들어갈 HTML head에 google api script 넣어주기"></a>2. reCHAPTCHA 가 들어갈 HTML head에 google api script 넣어주기</h4><p>Vue 에서는 <code>index.html</code> 에 넣어 주었다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.google.com/recaptcha/api.js"</span> <span class="attr">async</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/dist/build.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><p>url에 추가적인 parameter를 넣어줄 수 있다. </p><p>예를들어, reCAPTCHA 의 언어를 한국어로만 고정하고 싶으면 아래와 같이 사용하면 된다.<br>(고정하지 않으면 사용자의 언어를 알아서 판별하여 위젯을 띄워준다.)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://www.google.com/recaptcha/api.js?hl=ko’&gt;&lt;/script&gt;</span></span></div></pre></td></tr></table></figure><p><a href="https://developers.google.com/recaptcha/docs/display" target="_blank" rel="external">참고 : 문서 중 JavaScript resource (api.js) parameters</a></p><h4 id="3-reCAPTCHA-widget을-사용-할-Component-에-넣는다"><a href="#3-reCAPTCHA-widget을-사용-할-Component-에-넣는다" class="headerlink" title="3. reCAPTCHA widget을 사용 할 Component 에 넣는다."></a>3. reCAPTCHA widget을 사용 할 Component 에 넣는다.</h4><p><code>&lt;div class=&quot;g-recaptcha&quot; data-sitekey=&quot;발급받은 Site key&quot;&gt;&lt;/div&gt;</code> 를 추가하면 자동으로 widget이 생성된다.</p><p>Form 안에 widget 을 넣어두면 받아온 recaptcha token 을 form submit 시 함께 전송한다.</p><p>위젯은 기본적으로 외형의 customize에 제약이 있다. 그나마 할 수 있는 customize는 Attribute 를 이용 한 것이다.</p><p><a href="https://developers.google.com/recaptcha/docs/display" target="_blank" rel="external">참고 : 문서 중 g-recaptcha tag attributes and grecaptcha.render parameters</a></p><p>나는 Key 좀 더 깔끔하게 관리하기 위해 <code>config.js</code> 파일을 새로 생성하여 그곳에 key를 따로 뺐다.</p><p>그 후 v-bind(:) 를 이용하여 binding 해 주었다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- ... --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></div><div class="line">        <span class="comment">&lt;!-- ... --&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"g-recaptcha"</span> <span class="attr">:data-sitekey</span>=<span class="string">"recaptchaSiteKey"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- ... --&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">import Config from '../config'</span></div><div class="line"><span class="undefined"></span></div><div class="line"><span class="undefined">export default &#123;</span></div><div class="line"><span class="undefined">    //...</span></div><div class="line"><span class="undefined">    data()&#123;</span></div><div class="line"><span class="undefined">        return &#123;</span></div><div class="line"><span class="undefined">            //...</span></div><div class="line"><span class="undefined">            recaptchaSiteKey: Config.RECAPTCHA_SITE_KEY,</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    &#125;</span></div><div class="line"><span class="undefined">&#125;</span></div><div class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure><p>reCAPTCHA widget 을 form 안에 넣으면 reCAPTCHA를 컨트롤 할 수 있는 메서드를 제공한다. reCAPTCHA widget을 만들면 자동으로 생성되는 <code>grecaptcha</code> 객체 안에 존재한다.</p><p>Life cycle 의 created Hook 에서 grecaptcha 를 log 를 찍어보면 다음과 같이 생겼다.</p><img src="/2017/11/20/recaptcha-with-vue/g-recaptcha.png" alt="grecaptcha" title="grecaptcha"><p>getResponse()는 widget을 제크한 후 token을 잘 가져 왔는지 체크할 때 사용한다.<br>여기서 유용했던 method 는 Form validation 시 사용한 <code>reset()</code> 이었다.</p><p>reCAPTCHA widget에서 응답받은 token은 한번 submit 한 후 또 같은 token을 사용하여 submit 할 수 없다.</p><p>만약, reCAPTCHA를 통과한 정상적인 유저가 submit 한 데이터가 서버 측의 validation (예를들면 중복 방지와 같은 것)을 통과하지 못하고 다시 폼 화면으로 반환된다면 reCAPTCHA의 token은 다시 쓸 수 없지만 위젯은 체크 된 상태로 되어있다.</p><p>POST의 reject시 실행 될 handler 에서 <code>grecaptcha.reset()</code> 메서드를 활용하여 다시 widget을 로드 할 수 있었다.</p><h4 id="4-서버-측-검증"><a href="#4-서버-측-검증" class="headerlink" title="4. 서버 측 검증"></a>4. 서버 측 검증</h4><p>Vue 가 할 일은 3. 에서 끝난다.</p><p>서버에서는 submit 한 데이터를 읽어서 받은 reCAPTCHA token 을 secret key와 함께 다시 보낸다.</p><p>난 node.js 로 API 서버를 만들었고, post 전송을 위해 request 모듈을 설치했다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://www.google.com/recaptcha/api/siteverify?secret=&lt;발급받은 secret key&gt;&amp;response=&lt;client에서 보낸 token&gt;</div></pre></td></tr></table></figure><p>발급받은 key 와 token을 활용하여 위와 같은 주소를 만들어서 Post 를 보내면 된다.</p><img src="/2017/11/20/recaptcha-with-vue/success.png" alt="success" title="success"><img src="/2017/11/20/recaptcha-with-vue/fail.png" alt="fail" title="fail"><p>성공 / 실패 시 위와 같은 객체를 반환한다. 이때 string 형태로 반환하는데, <code>JSON.parse()</code> 를 이용하여 객체로 바꿔준 후 이용하였다.</p><p>success 기준으로 분기점을 만들어 준 후 각 케이스 마다 handling 을 하면 된다.</p><h4 id="추가"><a href="#추가" class="headerlink" title="추가"></a>추가</h4><p>이 글을 쓰면서 reCAPTCHA 공식 홈페이지를 뒤져보니 구글에서 제공하는 <a href="https://codelabs.developers.google.com/codelabs/reCAPTCHA/index.html" target="_blank" rel="external">Codelab</a> 이 따로 있었다.<br>JAVA 와 Python 용인데 좋은 튜토리얼이다.</p><p>Refs:</p><p><a href="http://pentode.tistory.com/112" target="_blank" rel="external">http://pentode.tistory.com/112</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;소개&quot;&gt;&lt;a href=&quot;#소개&quot; class=&quot;headerlink&quot; title=&quot;소개&quot;&gt;&lt;/a&gt;소개&lt;/h2&gt;&lt;p&gt;reCAPTCHA 를 적용하는 튜토리얼은 충분히 많으나, Vue 와 함꼐 쓴 예제는 없어서 써보게 되었다.&lt;br&gt;사실, Vue
      
    
    </summary>
    
    
      <category term="Vue, reCAPTCHA" scheme="http://kangsanChang.github.io/tags/Vue-reCAPTCHA/"/>
    
  </entry>
  
  <entry>
    <title>p 태그의 공백 다루기</title>
    <link href="http://kangsanChang.github.io/2017/11/17/p-tag-white-space/"/>
    <id>http://kangsanChang.github.io/2017/11/17/p-tag-white-space/</id>
    <published>2017-11-17T00:48:06.000Z</published>
    <updated>2017-11-17T00:55:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><code>&lt;p&gt;</code> 태그를 사용하다보면, 개행이나 탭 사용 시 원하는대로 문자가 안 들어간다.</p><p><code>&lt;pre&gt;</code>를 이용하면 탭이나 개행을 그대로 출력해주긴 하지만, 엘리먼트의 크기에 맞춰서 글씨가 자동으로 개행되지(text wrapping) 않는다. 글씨 길이 그대로 출력한다.</p><p><code>&lt;p&gt;</code> 태그 내부의 문자열의 개행, 탭, text wrapping 같은 것을 다루는 속성이 <code>white-space</code> 이다.</p><p>내가 원하는 모양으로 출력하기 위해선 문자열의 개행도 잘 되고, 해당 엘리먼트 크기에 글씨의 길이가 자동으로 맞춰져서 개행하는 것이었는데 <code>pre-wrap</code> 을 사용하면 됐다.</p><p>css 먹이는 곳에서<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p &#123;</div><div class="line">    white-space: pre-wrap;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>이런식으로 사용하면 된다.</p><p>개행/ 공백, tab / text wrapping 에 따라 다양한 white-space 속성을 사용할 수 있다. </p><img src="/2017/11/17/p-tag-white-space/white-spaces.png" alt="White-Space" title="White-Space"><p>자세한 내용은 아래에서 확인하자</p><p>Refs:<br><a href="https://developer.mozilla.org/ko/docs/Web/CSS/white-space" target="_blank" rel="external">https://developer.mozilla.org/ko/docs/Web/CSS/white-space</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 태그를 사용하다보면, 개행이나 탭 사용 시 원하는대로 문자가 안 들어간다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;를 이용하면 탭이나 개행을 그대로 출력해주긴 하지만, 엘리먼트의 크기에 맞
      
    
    </summary>
    
    
      <category term="HTML, CSS" scheme="http://kangsanChang.github.io/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>hexo 간단 사용법</title>
    <link href="http://kangsanChang.github.io/2017/11/17/hexo-simple-start/"/>
    <id>http://kangsanChang.github.io/2017/11/17/hexo-simple-start/</id>
    <published>2017-11-17T00:25:46.000Z</published>
    <updated>2017-11-17T00:35:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-쉽게-시작하기"><a href="#hexo-쉽게-시작하기" class="headerlink" title="hexo 쉽게 시작하기"></a>hexo 쉽게 시작하기</h2><p>매일 블로그를 쓰는 게 아니어서, 매번 쓰기 전 찾아봐서 한번 간략하게 정리한다.</p><p>시작 전 github blog 를 사용할 수 있게 <code>_config.yml</code> 에 설정을 해줘야 한다.</p><p><code>hexo-deployer-git</code> 도 설치해야 한다.</p><p><a href="https://hexo.io/docs/deployment.html#Git" target="_blank" rel="external">https://hexo.io/docs/deployment.html#Git</a></p><h2 id="사용법"><a href="#사용법" class="headerlink" title="사용법"></a>사용법</h2><ol><li><p>Draft 생성</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new draft &lt;post_name&gt;</div></pre></td></tr></table></figure><p> post_name 은 영어로 작성하자. 그래야 url 이나 파일명이 깔끔하다. 띄어쓰기는 <code>-</code> (hyphen) 으로 구분한다.</p><p> 추후에 draft 들어와서 title을 한글로 바꿔주자.</p></li><li><p>Publish</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo publish &lt;post_name&gt;</div></pre></td></tr></table></figure><p> publish 이름에서 알 수 있듯, draft를 post 로 이동하는 것이다.</p><p> <code>_drafts</code> 에 있던 문서는 <code>_posts</code> 하위로 이동한다.</p></li><li><p>정적 파일 (HTML) 생성</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo generate</div><div class="line"></div><div class="line"><span class="comment"># 무엇인가 잘못되면</span></div><div class="line"><span class="comment"># hexo clean 을 한번 해보자.</span></div></pre></td></tr></table></figure></li><li><p>Deploy</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure><p> 생성 한 정적 파일을 remote repository 에 올린다.</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;hexo-쉽게-시작하기&quot;&gt;&lt;a href=&quot;#hexo-쉽게-시작하기&quot; class=&quot;headerlink&quot; title=&quot;hexo 쉽게 시작하기&quot;&gt;&lt;/a&gt;hexo 쉽게 시작하기&lt;/h2&gt;&lt;p&gt;매일 블로그를 쓰는 게 아니어서, 매번 쓰기 전 찾아봐
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://kangsanChang.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo server 실행 시 DTraceProviderBindings 찾을 수 없는 경우</title>
    <link href="http://kangsanChang.github.io/2017/09/18/hexo-server-error/"/>
    <id>http://kangsanChang.github.io/2017/09/18/hexo-server-error/</id>
    <published>2017-09-18T04:29:32.000Z</published>
    <updated>2017-11-17T02:35:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://hexo.io/ko/docs/index.html" target="_blank" rel="external">hexo</a> 로 블로그 시작한 후 첫 포스팅이다. 왜냐하면 내가 이걸로 고생했기 때문.</p><p>설치는 다른 블로그를 보고 잘 따라 했으나 <code>$ hexo server</code> 만 하면 아래와 같이 에러가 발생하였다.</p><img src="/2017/09/18/hexo-server-error/DTrace-error.png" alt="DTrace-Error" title="DTrace-Error"><p>이 경우 검색해보면 hexo 를 -g –no-optional 을 주고 재설치하는 방법이 올라와 있었지만, 내 문제는 해결되지 않았고 다른 방법들도 많이 따라 해 봤지만, 다 실패하고 결국 node를 깔끔하게 삭제하고 설치하는 방법 밖에 없었다. (<a href="https://github.com/hexojs/hexo/issues/2256#issuecomment-274047861" target="_blank" rel="external">참고</a>)</p><h3 id="OSX-기준으로-nodejs-완전히-삭제하는-방법"><a href="#OSX-기준으로-nodejs-완전히-삭제하는-방법" class="headerlink" title="OSX 기준으로 nodejs 완전히 삭제하는 방법"></a>OSX 기준으로 nodejs 완전히 삭제하는 방법</h3><script src="//gist.github.com/5d8c09310156b3a37c968b2f6d3a1e79.js"></script><h3 id="NVM-Node-Version-Manager-설치"><a href="#NVM-Node-Version-Manager-설치" class="headerlink" title="NVM (Node Version Manager) 설치"></a>NVM (Node Version Manager) 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash</div></pre></td></tr></table></figure><p>또는<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash</div></pre></td></tr></table></figure></p><h3 id="Node-설치-후"><a href="#Node-설치-후" class="headerlink" title="Node 설치 후"></a>Node 설치 후</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ nvm install node</div><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure><h3 id="성공"><a href="#성공" class="headerlink" title="성공!"></a>성공!</h3><p>hexo 를 통해 블로그 생성 후  <code>$ hexo server</code> 해보면 아래와 같이 잘 나온다.</p><img src="/2017/09/18/hexo-server-error/good-hexo.png" alt="Good-Hexo" title="Good-Hexo"><h3 id="참고"><a href="#참고" class="headerlink" title="참고"></a>참고</h3><p>Hexo 설정 시 도움 많이 된 블로그</p><p><a href="http://futurecreator.github.io/categories/Web/Hexo/" target="_blank" rel="external">http://futurecreator.github.io/categories/Web/Hexo/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://hexo.io/ko/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt; 로 블로그 시작한 후 첫 포스팅이다. 왜냐하면 내가 이걸로 고생했기 때문.&lt;/p&gt;
&lt;p&gt;설치는
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://kangsanChang.github.io/tags/Hexo/"/>
    
      <category term="Error" scheme="http://kangsanChang.github.io/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://kangsanChang.github.io/2017/09/15/hello-world/"/>
    <id>http://kangsanChang.github.io/2017/09/15/hello-world/</id>
    <published>2017-09-15T01:41:16.000Z</published>
    <updated>2017-09-15T01:41:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
